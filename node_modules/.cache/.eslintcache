[{"/Users/saurabhgupta/Desktop/my-react-app/src/index.js":"1","/Users/saurabhgupta/Desktop/my-react-app/src/reportWebVitals.js":"2","/Users/saurabhgupta/Desktop/my-react-app/src/App.js":"3","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/index.js":"4","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/App.js":"5","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/ResetButton.js":"6","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/ScoreBoard.js":"7","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/RestartButton.js":"8","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/Board.js":"9","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/Box.js":"10"},{"size":535,"mtime":1678738630293,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1678738630293,"results":"13","hashOfConfig":"12"},{"size":528,"mtime":1678738630292,"results":"14","hashOfConfig":"12"},{"size":218,"mtime":1646662494000,"results":"15","hashOfConfig":"16"},{"size":2983,"mtime":1679821657129,"results":"17","hashOfConfig":"16"},{"size":201,"mtime":1646662494000,"results":"18","hashOfConfig":"16"},{"size":384,"mtime":1679813969900,"results":"19","hashOfConfig":"16"},{"size":211,"mtime":1679816223801,"results":"20","hashOfConfig":"16"},{"size":330,"mtime":1646662494000,"results":"21","hashOfConfig":"16"},{"size":238,"mtime":1646662494000,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tlsmvs",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nmec3q",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saurabhgupta/Desktop/my-react-app/src/index.js",[],[],"/Users/saurabhgupta/Desktop/my-react-app/src/reportWebVitals.js",[],[],"/Users/saurabhgupta/Desktop/my-react-app/src/App.js",[],[],"/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/index.js",[],[],"/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/App.js",["54","55","56"],[],"import React, { useState } from \"react\";\n\nimport { ResetButton } from \"./components/ResetButton\";\nimport { ScoreBoard } from \"./components/ScoreBoard\";\nimport { Board } from \"./components/Board\";\nimport {RestartButton} from \"./components/RestartButton\";\n\nimport './App.css';\n\nconst App = () => {\n\n  const win_combinations = [[0, 1, 2],[0, 3, 6],[0, 4, 8],[6, 7, 8],[2, 5, 8],[3, 4, 5],[1, 4, 7],[2, 4, 6]];\n\n  const [is_x_playing, setXPlaying] = useState(true);\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [scores, setScores] = useState({ x_score: 0, o_score: 0 })\n  const [is_game_over, setGameOver] = useState(false);\n\n  const mainBoardHandling = (boxIdx) => {\n      allDone(board);\n      // Update the board\n\n      const updatedBoard = board.map((value, idx) => {\n        if (idx === boxIdx) {\n          return is_x_playing ? \"X\" : \"O\";\n        } \n        else {\n          return value;\n        }\n      })\n\n    setBoard(updatedBoard);\n\n    //Check for winner and update the score\n    const winner = checkForWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let { o_score } = scores;\n        o_score += 1;\n        setScores({ ...scores, o_score })\n      } else {\n        let { x_score } = scores;\n        x_score += 1;\n        setScores({ ...scores, x_score })\n      }\n      alert(`Player - ${winner} won the round ;)`);\n      setTimeout(nextRound(),3000);\n    }\n\n    //Alternating the player\n    setXPlaying(!is_x_playing);\n  }\n\n  const allDone = () =>{\n    let l = board.length;\n      for(let i = 0; i < l; i++){\n        if((board[i] == 'X' || (board[i] == 'O')) == false){\n          return;\n        }\n      }\n      alert(`Draw :0`);\n      setTimeout(nextRound(),3000);\n  }\n\n\n\n  const restartGame = () => {\n      let conf_msg = \"Do you want to restart the game??\";\n      if(!window.confirm(conf_msg)){\n        return;\n      }\n      setGameOver(false);\n      setBoard(Array(9).fill(null));\n      setScores({ x_score: 0, o_score: 0 });\n  }\n\n  const resetBoard = () => {\n    let conf_msg = \"Do you want to reset the Board??\";\n    if(!window.confirm(conf_msg)){\n      return;\n    }\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  const nextRound = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  const checkForWinner = (board) => {\n    for (let i = 0; i < win_combinations.length; i++) {\n      const [x, y, z] = win_combinations[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <ScoreBoard scores={scores} is_x_playing={is_x_playing} />\n      <RestartButton restartGame = {restartGame}/>\n      <ResetButton resetBoard={resetBoard} />\n      <Board board={board} onClick={is_game_over ? resetBoard : mainBoardHandling} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/ResetButton.js",[],[],"/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/ScoreBoard.js",[],[],"/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/RestartButton.js",[],[],"/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/Board.js",[],[],"/Users/saurabhgupta/Documents/GitHub/TheLordSaurabh.github.io/tic-tac-toe-game/src/components/Box.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":58,"column":22,"nodeType":"59","messageId":"60","endLine":58,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":58,"column":42,"nodeType":"59","messageId":"60","endLine":58,"endColumn":44},{"ruleId":"57","severity":1,"message":"58","line":58,"column":51,"nodeType":"59","messageId":"60","endLine":58,"endColumn":53},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]