{"ast":null,"code":"import _objectSpread from\"/Users/saurabhgupta/Documents/GitHub/tic-tac-toe-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/saurabhgupta/Documents/GitHub/tic-tac-toe-game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{ResetButton}from\"./components/ResetButton\";import{ScoreBoard}from\"./components/ScoreBoard\";import{Board}from\"./components/Board\";import{RestartButton}from\"./components/RestartButton\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var win_combinations=[[0,1,2],[0,3,6],[0,4,8],[6,7,8],[2,5,8],[3,4,5],[1,4,7],[2,4,6]];var _useState=useState(true),_useState2=_slicedToArray(_useState,2),is_x_playing=_useState2[0],setXPlaying=_useState2[1];var _useState3=useState(Array(9).fill(null)),_useState4=_slicedToArray(_useState3,2),board=_useState4[0],setBoard=_useState4[1];var _useState5=useState({x_score:0,o_score:0}),_useState6=_slicedToArray(_useState5,2),scores=_useState6[0],setScores=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),is_game_over=_useState8[0],setGameOver=_useState8[1];var mainBoardHandling=function mainBoardHandling(boxIdx){allDone(board);// Update the board\nvar updatedBoard=board.map(function(value,idx){if(idx===boxIdx){return is_x_playing?\"X\":\"O\";}else{return value;}});setBoard(updatedBoard);//Check for winner and update the score\nvar winner=checkForWinner(updatedBoard);if(winner){if(winner===\"O\"){var o_score=scores.o_score;o_score+=1;setScores(_objectSpread(_objectSpread({},scores),{},{o_score:o_score}));}else{var x_score=scores.x_score;x_score+=1;setScores(_objectSpread(_objectSpread({},scores),{},{x_score:x_score}));}alert(\"Player - \".concat(winner,\" won the round ;)\"));setTimeout(nextRound(),3000);}//Alternating the player\nsetXPlaying(!is_x_playing);};var allDone=function allDone(){var l=board.length;for(var i=0;i<l;i++){if((board[i]=='X'||board[i]=='O')==false){return;}}alert(\"Draw :0\");setTimeout(nextRound(),3000);};var restartGame=function restartGame(){var conf_msg=\"Do you want to restart the game??\";if(!window.confirm(conf_msg)){return;}setGameOver(false);setBoard(Array(9).fill(null));setScores({x_score:0,o_score:0});};var resetBoard=function resetBoard(){var conf_msg=\"Do you want to reset the Board??\";if(!window.confirm(conf_msg)){return;}setGameOver(false);setBoard(Array(9).fill(null));};var nextRound=function nextRound(){setGameOver(false);setBoard(Array(9).fill(null));};var checkForWinner=function checkForWinner(board){for(var i=0;i<win_combinations.length;i++){var _win_combinations$i=_slicedToArray(win_combinations[i],3),x=_win_combinations$i[0],y=_win_combinations$i[1],z=_win_combinations$i[2];// Iterate through win conditions and check if either player satisfies them\nif(board[x]&&board[x]===board[y]&&board[y]===board[z]){setGameOver(true);return board[x];}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(ScoreBoard,{scores:scores,is_x_playing:is_x_playing}),/*#__PURE__*/_jsx(RestartButton,{restartGame:restartGame}),/*#__PURE__*/_jsx(ResetButton,{resetBoard:resetBoard}),/*#__PURE__*/_jsx(Board,{board:board,onClick:is_game_over?resetBoard:mainBoardHandling})]});};export default App;","map":{"version":3,"names":["React","useState","ResetButton","ScoreBoard","Board","RestartButton","jsx","_jsx","jsxs","_jsxs","App","win_combinations","_useState","_useState2","_slicedToArray","is_x_playing","setXPlaying","_useState3","Array","fill","_useState4","board","setBoard","_useState5","x_score","o_score","_useState6","scores","setScores","_useState7","_useState8","is_game_over","setGameOver","mainBoardHandling","boxIdx","allDone","updatedBoard","map","value","idx","winner","checkForWinner","_objectSpread","alert","concat","setTimeout","nextRound","l","length","i","restartGame","conf_msg","window","confirm","resetBoard","_win_combinations$i","x","y","z","className","children","onClick"],"sources":["/Users/saurabhgupta/Documents/GitHub/tic-tac-toe-game/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { ResetButton } from \"./components/ResetButton\";\nimport { ScoreBoard } from \"./components/ScoreBoard\";\nimport { Board } from \"./components/Board\";\nimport {RestartButton} from \"./components/RestartButton\";\n\nimport './App.css';\n\nconst App = () => {\n\n  const win_combinations = [[0, 1, 2],[0, 3, 6],[0, 4, 8],[6, 7, 8],[2, 5, 8],[3, 4, 5],[1, 4, 7],[2, 4, 6]];\n\n  const [is_x_playing, setXPlaying] = useState(true);\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [scores, setScores] = useState({ x_score: 0, o_score: 0 })\n  const [is_game_over, setGameOver] = useState(false);\n\n  const mainBoardHandling = (boxIdx) => {\n      allDone(board);\n      // Update the board\n\n      const updatedBoard = board.map((value, idx) => {\n        if (idx === boxIdx) {\n          return is_x_playing ? \"X\" : \"O\";\n        } \n        else {\n          return value;\n        }\n      })\n\n    setBoard(updatedBoard);\n\n    //Check for winner and update the score\n    const winner = checkForWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let { o_score } = scores;\n        o_score += 1;\n        setScores({ ...scores, o_score })\n      } else {\n        let { x_score } = scores;\n        x_score += 1;\n        setScores({ ...scores, x_score })\n      }\n      alert(`Player - ${winner} won the round ;)`);\n      setTimeout(nextRound(),3000);\n    }\n\n    //Alternating the player\n    setXPlaying(!is_x_playing);\n  }\n\n  const allDone = () =>{\n    let l = board.length;\n      for(let i = 0; i < l; i++){\n        if((board[i] == 'X' || (board[i] == 'O')) == false){\n          return;\n        }\n      }\n      alert(`Draw :0`);\n      setTimeout(nextRound(),3000);\n  }\n\n\n\n  const restartGame = () => {\n      let conf_msg = \"Do you want to restart the game??\";\n      if(!window.confirm(conf_msg)){\n        return;\n      }\n      setGameOver(false);\n      setBoard(Array(9).fill(null));\n      setScores({ x_score: 0, o_score: 0 });\n  }\n\n  const resetBoard = () => {\n    let conf_msg = \"Do you want to reset the Board??\";\n    if(!window.confirm(conf_msg)){\n      return;\n    }\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  const nextRound = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  const checkForWinner = (board) => {\n    for (let i = 0; i < win_combinations.length; i++) {\n      const [x, y, z] = win_combinations[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <ScoreBoard scores={scores} is_x_playing={is_x_playing} />\n      <RestartButton restartGame = {restartGame}/>\n      <ResetButton resetBoard={resetBoard} />\n      <Board board={board} onClick={is_game_over ? resetBoard : mainBoardHandling} />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}